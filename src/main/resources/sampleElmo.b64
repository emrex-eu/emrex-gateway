<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<elmo xmlns="https://github.com/emrex-eu/elmo-schemas/tree/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="https://github.com/emrex-eu/elmo-schemas/tree/v1 https://raw.githubusercontent.com/emrex-eu/elmo-schemas/v1/schema.xsd">
  <generatedDate>2023-02-21T08:54:04.479+01:00</generatedDate>
  <learner>
    <citizenship>NO</citizenship>
    <identifier type="nationalIdentifier">12345678910</identifier>
    <givenNames>Test</givenNames>
    <familyName>Testesen</familyName>
    <bday>1991-01-20</bday>
  </learner>
  <report>
    <issuer>
      <country>NO</country>
      <identifier type="local">185</identifier>
      <identifier type="erasmus">N OSLO01</identifier>
      <identifier type="schac">uio.no</identifier>
      <identifier type="pic">999975814</identifier>
      <title xml:lang="no">Universitetet i Oslo</title>
      <title xml:lang="en">University of Oslo</title>
      <url>https://www.uio.no/</url>
    </issuer>
    <learningOpportunitySpecification>
      <identifier type="local">INF4000-1</identifier>
      <identifier type="elmo">638263636656537</identifier>
      <identifier type="nus">754115</identifier>
      <identifier type="courseCode">INF4000</identifier>
      <identifier type="courseVersion">1</identifier>
      <title xml:lang="no">Testing</title>
      <title xml:lang="en">Testing</title>
      <type>Course</type>
      <subjectArea>11.3</subjectArea>
      <iscedCode>0613</iscedCode>
      <specifies>
        <learningOpportunityInstance>
          <start>2019-01-15</start>
          <date>2019-07-15</date>
          <academicTerm>
            <title xml:lang="no">2019 Vår</title>
            <title xml:lang="nn">2019 Vår</title>
            <title xml:lang="en">2019 Spring</title>
            <start>2019-01-15</start>
            <end>2019-07-15</end>
          </academicTerm>
          <status>passed</status>
          <gradingSchemeLocalId>30</gradingSchemeLocalId>
          <resultLabel>A</resultLabel>
          <resultDistribution>
            <category count="63" label="A" />
            <category count="24" label="B" />
            <category count="3" label="C" />
            <category count="1" label="D" />
            <category count="2" label="E" />
          </resultDistribution>
          <credit>
            <scheme>ECTS</scheme>
            <level>Master</level>
            <value>20</value>
          </credit>
          <level>
            <type>EQF</type>
            <description>European Qualification Framework</description>
            <value>7</value>
          </level>
          <engagementHours>0.0</engagementHours>
          <attachments />
          <extension>
            <element xmlns="http://www.fellesstudentsystem.no/applikasjoner/webservice/schemas/emrex"
                     type="fsAssesmentName" xml:lang="no">Innlevering av seks prosjektoppgaver, som hver består av en
              teoretisk og en praktisk del
            </element>
            <element xmlns="http://www.fellesstudentsystem.no/applikasjoner/webservice/schemas/emrex"
                     type="fsAssesmentName" xml:lang="nn">Undervegsvurdering, ikkje avsl. eks.
            </element>
            <element xmlns="http://www.fellesstudentsystem.no/applikasjoner/webservice/schemas/emrex"
                     type="fsAssesmentName" xml:lang="en">Six project assignments, each with one theoretical and one
              practical part
            </element>
          </extension>
        </learningOpportunityInstance>
      </specifies>
      <extension />
    </learningOpportunitySpecification>
    <learningOpportunitySpecification>
      <identifier type="local">HMS0507-1</identifier>
      <identifier type="elmo">435414743477582</identifier>
      <identifier type="nus">659999</identifier>
      <identifier type="courseCode">HMS0507</identifier>
      <identifier type="courseVersion">1</identifier>
      <title xml:lang="no">Brannsikkerhet</title>
      <title xml:lang="en">Fire Safety</title>
      <type>Course</type>
      <iscedCode>0588</iscedCode>
      <url>http://www.uio.no/studier/emner/matnat/kjemi/HMS0507/</url>
      <specifies>
        <learningOpportunityInstance>
          <start>2015-08-15</start>
          <date>2015-12-15</date>
          <academicTerm>
            <title xml:lang="no">2015 Høst</title>
            <title xml:lang="nn">2015 Haust</title>
            <title xml:lang="en">2015 Autumn</title>
            <start>2015-08-15</start>
            <end>2015-12-15</end>
          </academicTerm>
          <status>passed</status>
          <gradingSchemeLocalId>38</gradingSchemeLocalId>
          <resultLabel>Bestått</resultLabel>
          <credit>
            <scheme>ECTS</scheme>
            <level>Bachelor</level>
            <value>0</value>
          </credit>
          <level>
            <type>EQF</type>
            <description>European Qualification Framework</description>
            <value>6</value>
          </level>
          <engagementHours>0.0</engagementHours>
          <attachments />
          <extension>
            <element xmlns="http://www.fellesstudentsystem.no/applikasjoner/webservice/schemas/emrex"
                     type="fsAssesmentName" xml:lang="no">Brannsikkerhetskurs
            </element>
            <element xmlns="http://www.fellesstudentsystem.no/applikasjoner/webservice/schemas/emrex"
                     type="fsAssesmentName" xml:lang="en">Fire safety
            </element>
          </extension>
        </learningOpportunityInstance>
      </specifies>
      <extension />
    </learningOpportunitySpecification>
    <gradingScheme localId="30"> <!-- TODO Not necessarily the correct description for localID 30, but description is taken from UiO https://www.uio.no/studier/eksamen/karakterer/ for this example -->
      <description xml:lang="en">A – Excellent
        An excellent performance, clearly outstanding. The candidate demonstrates excellent judgement and a high degree of independent thinking.

        B – Very good
        A very good performance. The candidate demonstrates sound judgement and a very good degree of independent thinking.

        C – Good
        A good performance in most areas. The candidate demonstrates a reasonable degree of judgement and independent thinking in the most important areas.

        D – Satisfactory
        A satisfactory performance, but with significant shortcomings. The candidate demonstrates a limited degree of judgement and independent thinking.

        E – Sufficient
        A performance that meets the minimum criteria, but no more. The candidate demonstrates a very limited degree of judgement and independent thinking.

        F – Fail
        A performance that does not meet the minimum academic criteria. The candidate demonstrates an absence of both judgement and independent thinking.</description>
    </gradingScheme>
    <issueDate>2023-02-21T08:53:51+01:00</issueDate>
  </report>
  <groups>
    <groupType id="185">
      <title xml:lang="no">Emnekategori</title>
      <group id="FRIEEMNER" sortingKey="100">
        <title xml:lang="no">Fritt valgte emner</title>
      </group>
      <group id="EXPHIL" sortingKey="0">
        <title xml:lang="no">Examen philosophicum</title>
      </group>
      <group id="120SP" sortingKey="12">
        <title xml:lang="no">Programdefinerte emner av minst 120 studiepoengs omfang</title>
      </group>
    </groupType>
  </groups>
  <Signature xmlns="http://www.w3.org/2000/09/xmldsig#">
    <SignedInfo>
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" />
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" />
      <Reference URI="">
        <Transforms>
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" />
        </Transforms>
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" />
        <DigestValue>vMVJFrGd2YmbdIbkoQbhwsGXF40=</DigestValue>
      </Reference>
    </SignedInfo>
    <SignatureValue>rwllNgffDr1OuZeYaAENfEu303yypTMUXA+UFPrNcd2C4XoI4kWfOkwinRPRDBzr1kgUKTygY2KJ&#13;
      yMEj8KFpgHg4/uYC4XavA5Lru53PaJm9q/+FNpeu1CY4oF1/fLnLnq6fHCVSynHdSZ7SgAGph+MO&#13;
      Gf/DcYjoHpYSI1y81HOqNh0/LKshSgEkQs0tlG3RZGpBqsbbiSdQUkdyZ/I2Cj27KUPZTOPPLqSr&#13;
      cu+sTHWI5khnsRAK+X8/UdCN92J66gUewUxJDplksujIVaaKBOOtLZO8NUL+mQSuHNyxHJuQbCD9&#13;
      5PwV64lHS01/P6jqhnCHAe3XTaAbRJZq64uZMD5q97fIZ3K+PPk1XEmllVSV5fGjLL5BWXvn6piX&#13;
      e2HyyGMFTqY99Fw3CzJYs4Wo+OC2HP8kyj2b3w5CtmgwtjI1IuqTp+qU1svXn4WcK/aa9nrBV/Pe&#13;
      eia3shxJpZFQpH0YU1Qyo8JWvH6atWSDwQZXiwae1/sl0EWDMnXftxLR
    </SignatureValue>
    <KeyInfo>
      <X509Data>
        <X509SubjectName>CN=emrex-test.vitnemalsportalen.no,O=Sikt - Kunnskapssektorens
          tjenesteleverandør,ST=Trøndelag,C=NO
        </X509SubjectName>
        <X509Certificate>MIIIKjCCBhKgAwIBAgIQB2jW8yyVAPCl8p5aULBe6DANBgkqhkiG9w0BAQwFADBEMQswCQYDVQQG&#13;
          EwJOTDEZMBcGA1UEChMQR0VBTlQgVmVyZW5pZ2luZzEaMBgGA1UEAxMRR0VBTlQgT1YgUlNBIENB&#13;
          IDQwHhcNMjIwNTI0MDAwMDAwWhcNMjMwNTI0MjM1OTU5WjCBhDELMAkGA1UEBhMCTk8xEzARBgNV&#13;
          BAgMClRyw7huZGVsYWcxNjA0BgNVBAoMLVNpa3QgLSBLdW5uc2thcHNzZWt0b3JlbnMgdGplbmVz&#13;
          dGVsZXZlcmFuZMO4cjEoMCYGA1UEAxMfZW1yZXgtdGVzdC52aXRuZW1hbHNwb3J0YWxlbi5ubzCC&#13;
          AaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAMbLoGma9wTzlGdxANRlpjlPw5/n18fmACQb&#13;
          RI3f/J7PoZ+ojnoKywzFUS1uJJRbpBx0CZy4qGzFsOIcyUMRlHrl0wOuofzgFqaIwiLNRThvQUZk&#13;
          oTZ0FtMThW5utkLM1JCZApDJw7cx8FYbtnFpRjb4I4EscTkCGHaCGZJmgEeZqqB0fFTDdXAhPm/P&#13;
          T1573LsY4ZGWxpWh2pVtx8hrDVfouMlR7vXM9DqxjAnV8qckUyR3wO1bnNuxX42qGaGz7pzf7bTd&#13;
          U/sOq2z/baHTCjBV37TB9pPiEu4lOMJD8g5OYIBKcID+CvJk/uOgyAQPcBoUbNlHW/LzmzUYWeWB&#13;
          154kPB5wVPi6PgPNoxP4xSzzaCAtBaEc0VTw4fK4eiVqp+HxbeZ+4mQIM0eRe/5W9LgVUlVjvp3Z&#13;
          ft/boTmF3Kt+VGy2die0FqrpP/JTi0gjBKSO8wpG0ATM9ftLkmyUsei0Vwc0VPAvfyRKHwlxKtau&#13;
          vx/ttzUriLqTFD5mpKhzIwIDAQABo4IDVTCCA1EwHwYDVR0jBBgwFoAUbx01SRBsMvpZoJ68iugf&#13;
          lb5xegwwHQYDVR0OBBYEFB1cAQ60whdJ2+jdleIJUZTUOlKBMA4GA1UdDwEB/wQEAwIFoDAMBgNV&#13;
          HRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysG&#13;
          AQQBsjEBAgJPMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeBDAEC&#13;
          AjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vR0VBTlQuY3JsLnNlY3RpZ28uY29tL0dFQU5UT1ZS&#13;
          U0FDQTQuY3JsMHUGCCsGAQUFBwEBBGkwZzA6BggrBgEFBQcwAoYuaHR0cDovL0dFQU5ULmNydC5z&#13;
          ZWN0aWdvLmNvbS9HRUFOVE9WUlNBQ0E0LmNydDApBggrBgEFBQcwAYYdaHR0cDovL0dFQU5ULm9j&#13;
          c3Auc2VjdGlnby5jb20wTwYDVR0RBEgwRoIfZW1yZXgtdGVzdC52aXRuZW1hbHNwb3J0YWxlbi5u&#13;
          b4Ijd3d3LmVtcmV4LXRlc3Qudml0bmVtYWxzcG9ydGFsZW4ubm8wggF8BgorBgEEAdZ5AgQCBIIB&#13;
          bASCAWgBZgB1AK33vvp8/xDIi509nB4+GGq0Zyldz7EMJMqFhjTr3IKKAAABgPX9/S0AAAQDAEYw&#13;
          RAIgUlKhTc7Cr7vTaRr+/0RDG6XhMVUDfZtWvjnczIGq7TUCIBLNGZvNjMBwZJI6aR3Iud5DR+H1&#13;
          a4Pr0POMDb5Z+zFhAHYAejKMVNi3LbYg6jjgUh7phBZwMhOFTTvSK8E6V6NS61IAAAGA9f39NwAA&#13;
          BAMARzBFAiAgaZoL3zW4Uk1IqoutkhEVN3zCBxVhXhL8JlOMasgAGwIhAPYWepiyRmez8dyxI0EG&#13;
          j/UuQc1esVDTkEYy0xlwRiz2AHUA6D7Q2j71BjUy51covIlryQPTy9ERa+zraeF3fW0GvW4AAAGA&#13;
          9f39DQAABAMARjBEAiAvcO4mItwrbnYeSPI1Lm/lHExIOnZwIMTkYUCY0bbZFgIgero42JU5nVOe&#13;
          ykOMvqiEXlaJtSd+R6df/6jBoU9fBncwDQYJKoZIhvcNAQEMBQADggIBAD2quCwy/sJbaJ9MS0NF&#13;
          0XzpZVbHZqy9lIn2Kbl5U2eD1cT5D7fUmRHK5UGIXWDnYxnGrNFq8J8qKJNhPM7JCCpnn3qH2KJ0&#13;
          EQ6qRFlddZW5+3wZ4aW8rn0KAcXNKGuT1aEuD67RILZ8QcwR60k4SRd8JA/9X29FYSdFfpoS1xEb&#13;
          JuZWpq3PqpG/io9dJgZk2uFHiJ9MMF/t+xgDbdoRwrLasaMvBsf2CIg2BdkYKhh4VA1EE0MkP55R&#13;
          7JzyBXtvWFds6sFV1ZYGERV+g+3D2vHDim3qU2GMK9ak214dMjTjNr+EHLWasG8hBZ3erTnJsGFF&#13;
          r1g2wFe+uv3TJpDsNQnepVHDJwzIkX+sjbqf6l+aXIaXJkBwbSoRNSnLyjzvj7pKBmZoBIGog3oQ&#13;
          kZrH3g0mY5ixWC1NdQaCMBl4zCJBK9n8e0aTZhs08qPYvC6toi2Q83zYh5VGAUtyHspDldKHYsj4&#13;
          e9NE36CqqpDXiRkg0fOVm+j+8rxit77l5SWN5j1q1Rytn21PvNthWH8m6OA0VtKpXY8QNr/VqRUm&#13;
          gFrCEI4dw9637qJsN3c4Tz6W05Er8byFqVOj+2Yf40qGxfZV22qyl3XSYGRBIpXkqv2V1t1KeDcY&#13;
          RvkxjPoQwZN5NLGXITeJNpnaN9lnhi06QY20t/ustwRFllH+46Xv6n8D
        </X509Certificate>
      </X509Data>
    </KeyInfo>
  </Signature>
</elmo>