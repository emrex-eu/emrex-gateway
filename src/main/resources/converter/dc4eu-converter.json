{
  "openapi": "3.0.1",
  "info": {
    "title": "DC4EU-converter",
    "description": "Dc4EuConverter api",
    "contact": {
      "name": "Somecontact",
      "url": "http://",
      "email": "@"
    },
    "license": {
      "name": "Some licence",
      "url": "http://example.com"
    },
    "version": "1.0"
  },
  "externalDocs": {
    "description": "Definition docs desc",
    "url": "http://example.com"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "localhost"
    },
    {
      "url": "https://dc4euconv.govpart.de",
      "description": "govpart.de"
    }
  ],
  "tags": [
    {
      "name": "Rest api for converter",
      "description": "Converts credentials between diffrent formats"
    }
  ],
  "paths": {
    "/rest/request": {
      "post": {
        "tags": [
          "Rest api for converter"
        ],
        "summary": "Convert credentials",
        "description": "## Convert between the source format (from) to the destination format (to) <br><p>**Example**</p><p>(from) elmo 1.7 xml document (to) elm3 json-ld document</p>",
        "operationId": "request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "## Returns the converted document in requested protocol",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "500": {
            "description": "Application error"
          },
          "404": {
            "description": "Protocol not found"
          }
        }
      }
    },
    "/rest/request2": {
      "post": {
        "tags": [
          "Rest api for converter"
        ],
        "summary": "Convert credentials",
        "description": "## Convert between the source format (from) to all the destination format (to) <br><p>**Example**</p><p>(from) elmo 1.7 xml document (to) elm3 json-ld document</p>",
        "operationId": "request2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "## Returns the converted document in requested protocol",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response2"
                }
              }
            }
          },
          "500": {
            "description": "Application error"
          },
          "404": {
            "description": "Protocol not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Parameters": {
        "type": "object",
        "properties": {
          "PreferredLanguages": {
            "type": "array",
            "description": "The 'preferredLanguages' variable represents a set of preferred languages in the case there no languages is present",
            "example": [
              "en",
              "sv"
            ],
            "items": {
              "type": "string",
              "description": "The 'preferredLanguages' variable represents a set of preferred languages in the case there no languages is present",
              "example": "[\"en\",\"sv\"]"
            }
          },
          "flags": {
            "type": "array",
            "description": "Turn flag on.",
            "example": [
              "VALIDATE_ELMO_INPUT_WITH_SCHEMA"
            ],
            "items": {
              "type": "string",
              "description": "Turn flag on.",
              "example": "[\"VALIDATE_ELMO_INPUT_WITH_SCHEMA\"]"
            }
          },
          "defaultLanguage": {
            "type": "string",
            "description": "Used as propertyname for iso639-2 language codes when not defined in input format",
            "example": "en"
          }
        }
      },
      "Protocol": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "The provided protocol",
            "example": "elmo"
          },
          "Version": {
            "type": "string",
            "description": "The version of the provided protocol",
            "example": "1.7"
          }
        }
      },
      "Request": {
        "type": "object",
        "properties": {
          "From": {
            "$ref": "#/components/schemas/Protocol"
          },
          "To": {
            "$ref": "#/components/schemas/Protocol"
          },
          "Parameters": {
            "$ref": "#/components/schemas/Parameters"
          },
          "Content": {
            "type": "string",
            "description": "Document formated as Base64-encoded string",
            "example": "QmFzZTY0LWVuY29kZWQgZ3ppcHBlZCBmcm9tLXByb3RvY29s"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "example": "Element birthplace could not be converted"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "ResponseProtocol": {
            "$ref": "#/components/schemas/Protocol"
          },
          "Content": {
            "type": "string",
            "description": "Protocol as Base64-encoded string",
            "example": "QmFzZTY0LWVuY29kZWQgZ3ppcHBlZCBmcm9tLXByb3RvY29s"
          },
          "ConverterVersion": {
            "type": "string",
            "description": "Current version of the converter",
            "example": "1.0"
          },
          "Timestamp": {
            "type": "string",
            "description": "Timestamp when conversion was performed",
            "example": "2024-08-09T07:22:04.154Z"
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "Warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        }
      },
      "Warning": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "example": "Element has novalue and could not be converted"
          }
        }
      },
      "Request2": {
        "type": "object",
        "properties": {
          "From": {
            "$ref": "#/components/schemas/Protocol"
          },
          "To": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Protocol"
            }
          },
          "Parameters": {
            "$ref": "#/components/schemas/Parameters"
          },
          "Content": {
            "type": "string",
            "description": "Document formated as Base64-encoded string",
            "example": "QmFzZTY0LWVuY29kZWQgZ3ppcHBlZCBmcm9tLXByb3RvY29s"
          }
        }
      },
      "Response2": {
        "type": "object",
        "properties": {
          "ResponseFormat": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseFormat"
            }
          },
          "ConverterVersion": {
            "type": "string",
            "description": "Current version of the converter",
            "example": "1.0"
          },
          "Timestamp": {
            "type": "string",
            "description": "Timestamp when conversion was performed",
            "example": "2024-08-09T07:22:04.154Z"
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "Warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        }
      },
      "ResponseFormat": {
        "type": "object",
        "properties": {
          "ResponseProtocol": {
            "$ref": "#/components/schemas/Protocol"
          },
          "Content": {
            "type": "string",
            "description": "Protocol as Base64-encoded string",
            "example": "QmFzZTY0LWVuY29kZWQgZ3ppcHBlZCBmcm9tLXByb3RvY29s"
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "Warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        }
      }
    }
  }
}